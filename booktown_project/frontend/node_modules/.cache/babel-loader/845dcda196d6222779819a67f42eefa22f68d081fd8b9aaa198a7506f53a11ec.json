{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Varsha K\\\\booktown_project\\\\frontend\\\\src\\\\components\\\\SignInPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isSeller = location.pathname.includes('seller');\n  const userType = isSeller ? 'seller' : 'buyer'; // Derive userType from isSeller\n\n  const handleSignUp = async e => {\n    e.preventDefault();\n    setSuccessMessage('');\n    setError('');\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          confirmPassword,\n          userType // Now userType is properly defined\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Store username and userType in localStorage\n        localStorage.setItem('username', username);\n        localStorage.setItem('userType', userType);\n        setSuccessMessage(result.message);\n        setTimeout(() => {\n          if (userType === 'seller') {\n            navigate('/seller-interface');\n          } else {\n            navigate('/buyer-interface');\n          }\n        }, 1000);\n      } else {\n        setError(result.message || 'Sign-Up failed');\n      }\n    } catch (err) {\n      setError('Error connecting to the server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isSeller ? 'Seller Sign Up' : 'Buyer Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: isSeller ? 'Seller Username' : 'Buyer Username'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Enter your ${isSeller ? 'seller' : 'buyer'} username`,\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm your password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isSeller ? 'Seller Sign Up' : 'Buyer Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: `/login?userType=${isSeller ? 'seller' : 'buyer'}`,\n          children: isSeller ? 'Seller Login' : 'Buyer Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpPage, \"BOnpewTrCPyxJoXZrKIR0tqJaO8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Link","jsxDEV","_jsxDEV","SignUpPage","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","error","setError","successMessage","setSuccessMessage","navigate","location","isSeller","pathname","includes","userType","handleSignUp","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","localStorage","setItem","message","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/Varsha K/booktown_project/frontend/src/components/SignInPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\r\nimport './Auth.css';\r\n\r\nconst SignUpPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isSeller = location.pathname.includes('seller');\r\n  const userType = isSeller ? 'seller' : 'buyer'; // Derive userType from isSeller\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    setSuccessMessage('');\r\n    setError('');\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          password,\r\n          confirmPassword,\r\n          userType, // Now userType is properly defined\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Store username and userType in localStorage\r\n        localStorage.setItem('username', username);\r\n        localStorage.setItem('userType', userType);\r\n\r\n        setSuccessMessage(result.message);\r\n        setTimeout(() => {\r\n          if (userType === 'seller') {\r\n            navigate('/seller-interface');\r\n          } else {\r\n            navigate('/buyer-interface');\r\n          }\r\n        }, 1000);\r\n      } else {\r\n        setError(result.message || 'Sign-Up failed');\r\n      }\r\n    } catch (err) {\r\n      setError('Error connecting to the server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h1>{isSeller ? 'Seller Sign Up' : 'Buyer Sign Up'}</h1>\r\n      <form className=\"auth-form\" onSubmit={handleSignUp}>\r\n        <label>{isSeller ? 'Seller Username' : 'Buyer Username'}</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={`Enter your ${isSeller ? 'seller' : 'buyer'} username`}\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label>Confirm Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm your password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n\r\n        <button type=\"submit\">{isSeller ? 'Seller Sign Up' : 'Buyer Sign Up'}</button>\r\n      </form>\r\n\r\n      <div className=\"auth-footer\">\r\n        <p>\r\n          Already have an account?{' '}\r\n          <Link to={`/login?userType=${isSeller ? 'seller' : 'buyer'}`}>\r\n            {isSeller ? 'Seller Login' : 'Buyer Login'}\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}