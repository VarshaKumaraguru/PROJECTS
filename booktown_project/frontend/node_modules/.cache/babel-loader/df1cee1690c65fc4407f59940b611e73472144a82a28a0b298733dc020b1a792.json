{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Varsha K\\\\booktown_project\\\\frontend\\\\src\\\\components\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './EventsPage.css';\nimport logo from \"../assets/images/BookTown.png\"; // Adjust logo path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [formData, setFormData] = useState({\n    eventName: '',\n    eventDescription: '',\n    eventLocation: ''\n  });\n\n  // Fetch existing events when the page loads\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/events'); // Adjust API URL\n        const data = await response.json();\n        if (response.ok) {\n          setEvents(data.events); // Assuming the API returns events in a `data.events` array\n        } else {\n          console.error('Failed to fetch events:', data.message);\n        }\n      } catch (err) {\n        console.error('Error fetching events:', err);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  // Handle changes in the form inputs\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (formData.eventName && formData.eventDescription && formData.eventLocation) {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/events', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        if (response.ok) {\n          const newEvent = await response.json();\n          setEvents([...events, newEvent]); // Append the new event\n          setFormData({\n            eventName: '',\n            eventDescription: '',\n            eventLocation: ''\n          });\n          setFormVisible(false); // Hide form after submission\n        } else {\n          console.error('Failed to upload event');\n        }\n      } catch (err) {\n        console.error('Error uploading event:', err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-event-button\",\n        onClick: () => setFormVisible(!isFormVisible),\n        children: \"Upload Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Event Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"eventName\",\n            value: formData.eventName,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Event Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"eventDescription\",\n            value: formData.eventDescription,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Event Location:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"eventLocation\",\n            value: formData.eventLocation,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-cards\",\n      children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.eventName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 16\n          }, this), \" \", event.eventDescription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 16\n          }, this), \" \", event.eventLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsPage, \"1WUivm4i0CUpONIiVMokX03cwIk=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","EventsPage","_s","isFormVisible","setFormVisible","events","setEvents","formData","setFormData","eventName","eventDescription","eventLocation","fetchEvents","response","fetch","data","json","ok","console","error","message","err","handleInputChange","e","name","value","target","handleFormSubmit","preventDefault","method","headers","body","JSON","stringify","newEvent","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","required","map","event","index","_c","$RefreshReg$"],"sources":["C:/Users/Varsha K/booktown_project/frontend/src/components/EventsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './EventsPage.css';\r\nimport logo from \"../assets/images/BookTown.png\"; // Adjust logo path if needed\r\n\r\nconst EventsPage = () => {\r\n  const [isFormVisible, setFormVisible] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    eventName: '',\r\n    eventDescription: '',\r\n    eventLocation: ''\r\n  });\r\n\r\n  // Fetch existing events when the page loads\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/api/events'); // Adjust API URL\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setEvents(data.events); // Assuming the API returns events in a `data.events` array\r\n        } else {\r\n          console.error('Failed to fetch events:', data.message);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching events:', err);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  // Handle changes in the form inputs\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formData.eventName && formData.eventDescription && formData.eventLocation) {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/api/events', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData)\r\n        });\r\n\r\n        if (response.ok) {\r\n          const newEvent = await response.json();\r\n          setEvents([...events, newEvent]); // Append the new event\r\n          setFormData({ eventName: '', eventDescription: '', eventLocation: '' });\r\n          setFormVisible(false); // Hide form after submission\r\n        } else {\r\n          console.error('Failed to upload event');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error uploading event:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"events-page\">\r\n      {/* Navbar */}\r\n      <nav className=\"navbar\">\r\n        <img src={logo} alt=\"Logo\" className=\"logo\" />\r\n        <button className=\"upload-event-button\" onClick={() => setFormVisible(!isFormVisible)}>\r\n          Upload Event\r\n        </button>\r\n      </nav>\r\n\r\n      {/* Event Form */}\r\n      {isFormVisible && (\r\n        <div className=\"event-form\">\r\n          <form onSubmit={handleFormSubmit}>\r\n            <label>\r\n              Event Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"eventName\"\r\n                value={formData.eventName}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Event Description:\r\n              <textarea\r\n                name=\"eventDescription\"\r\n                value={formData.eventDescription}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </label>\r\n            <label>\r\n              Event Location:\r\n              <input\r\n                type=\"text\"\r\n                name=\"eventLocation\"\r\n                value={formData.eventLocation}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Event Cards */}\r\n      <div className=\"event-cards\">\r\n        {events.map((event, index) => (\r\n          <div className=\"event-card\" key={index}>\r\n            <h3>{event.eventName}</h3>\r\n            <p><strong>Description:</strong> {event.eventDescription}</p>\r\n            <p><strong>Location:</strong> {event.eventLocation}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}